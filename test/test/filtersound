import soundfile as sf
import scipy.signal as signal
import matplotlib.pyplot as plt

# Load audio file
audio, sample_rate = sf.read('path/to/audio.wav')

# Filter audio using a high-pass filter
b, a = signal.butter(4, 1000, 'highpass', fs=sample_rate)
filtered_audio = signal.filtfilt(b, a, audio)

# Save filtered audio
sf.write('path/to/filtered_audio.wav', filtered_audio, sample_rate)

# Plot audio signals in the time domain
plt.figure(figsize=(10, 6))
plt.plot(audio, label='Original Audio')
plt.plot(filtered_audio, label='Filtered Audio')
plt.legend()
plt.title('Audio Signals in the Time Domain')
plt.xlabel('Samples')
plt.ylabel('Amplitude')
plt.show()

# Plot audio signals in the frequency domain
freq, orig_spec = signal.periodogram(audio, sample_rate)
freq, filtered_spec = signal.periodogram(filtered_audio, sample_rate)

plt.figure(figsize=(10, 6))
plt.semilogy(freq, orig_spec, label='Original Audio')
plt.semilogy(freq, filtered_spec, label='Filtered Audio')
plt.legend()
plt.title('Audio Signals in the Frequency Domain')
plt.xlabel('Frequency (Hz)')
plt.ylabel('Power Spectral Density')
plt.show()